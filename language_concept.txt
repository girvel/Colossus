


# Principles

* Explicit is always better than implicit
* Static is always better than dynamic
* Everything that can be made internal should be made internal
* Everything that can be made overridable should be made overridable
* Never limit the developer


# Colossus 1.0

```py
# python-like comments

# usual function calls
function()

# separator between expressions is either a new line or a semicolon
f1(); f2()
f3()

# every function can be used as an operator
1 + 2 == +(1, 2)

# variables declaration
int a

# assignment operator
=(a, 2)
a = 2

# block of code returns last value
int b = {
	int c = 1 + 1
	c * 2
}

# function declaration looks like assignment, but temporarily is not
f = (int x) -> x * x

# you can execute C++ code by special function
= = (int& left, int right) -> cpp("left = right;")

# you can temporarily use C++-like templates
# but this expression will be removed soon
template<typename T>
T(T& left, T right) -> cpp("left = right;")
```

## Version 0.1

Just a test version of the language. Contains only cpp code expressions.

```py
cpp("int a = 1;")
cpp("std::cout << a;")
cpp("std::cout << a;")
```

